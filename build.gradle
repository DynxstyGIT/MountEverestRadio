plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

sourceCompatibility = 17
targetCompatibility = 17

group 'com.dynxsty'

repositories {
    mavenCentral()
    maven { url 'https://m2.dv8tion.net/releases' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'net.dv8tion:JDA:5.0.0-alpha.9'
    implementation 'com.github.DynxstyGIT:DIH4JDA:1.3'
    implementation 'com.sedmelluq:lavaplayer:1.3.78'

//    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.0.0'
    implementation 'com.github.Bumbleboss:youtube_api:1.1'
    implementation 'com.google.code.gson:gson:2.9.0'

    // Lombok Annotations
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

jar{
    manifest{ attributes("Manifest-Version": "1.0", "Main-Class": "com.dynxsty.mounteverestradio.Bot") }
}

java{
    toolchain{
        sourceCompatibility(sourceCompatibility as JavaVersion)
        targetCompatibility(targetCompatibility as JavaVersion)
    }
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8'}
tasks.withType(JavaCompile).configureEach {
    options.forkOptions.jvmArgs.addAll( ['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'] )
}
test { useJUnitPlatform() }